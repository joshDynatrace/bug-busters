{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"1. About","text":"<p>Support Policy</p> <p>This is an enablement project created by the Center of Excellence - Enablement Team at Dynatrace.</p> <p>Support is provided via GitHub issues only. The materials provided in this repository are offered \"as-is\" without any warranties, express or implied. Use them at your own risk.</p>"},{"location":"#whats-this-tutorial-all-about","title":"What's this tutorial all about","text":"<p>In this tutorial we'll learn:</p> <ul> <li>how this codespace is being built</li> <li>how is the separation of concerns of the architecture in this devcontainer</li> <li>the functions.sh file</li> <li>create Github documentation and publish it</li> <li>How MKDocs work</li> <li>monitor the Github documentation</li> <li>monitor the instatiation of codespaces (learn about the usage of a specific enablement)</li> <li>exposing ports</li> <li>tipp &amp; tricks</li> <li>troubleshooting</li> </ul> <p> </p> <p>What will we do</p> <p>In this tutorial we will learn how easy it is to create an enablement using codespaces and a Kubernetes cluster!</p> <ul> <li>Yes! let's begin </li> </ul>"},{"location":"2-getting-started/","title":"2. Getting started","text":"<p>Requirements</p> <ul> <li>A Grail enabled Dynatrace SaaS Tenant (sign up here).</li> <li>A GitHub account to interact with the demo repository.</li> </ul>"},{"location":"2-getting-started/#1-prerequisites-before-launching-the-codespace","title":"1. Prerequisites before launching the Codespace","text":"<p>In here you place the prerequisites and everything that is needed before launching the codespace.</p> <p>As a Professor I highly recommend to install VSCode locally and always open the devcontainer from it, specially since we'll be using some plugins for enhancing the productivity. </p> <p>Let's launch the Codespace</p> <p>Now we are ready to launch the Codespace!</p> <ul> <li>Let's launch Codespaces</li> </ul>"},{"location":"3-codespaces/","title":"3. Codespaces","text":"<p>TODO: Sizing &amp; secrets you need</p>"},{"location":"3-codespaces/#11-codespaces-configuration","title":"1.1 Codespaces configuration","text":"<p>Branch, Machine sizing &amp; secrets</p> <ul> <li>Branch<ul> <li>select the main branch</li> </ul> </li> <li>Machine sizing<ul> <li>As a machine type select 2-core</li> </ul> </li> <li>Secrets (enter your credentials within the following variables)<ul> <li>DT_TENANT</li> <li>DT_OPERATOR_TOKEN</li> <li>DT_INGEST_TOKEN</li> </ul> </li> </ul>"},{"location":"3-codespaces/#2-while-the-codespace-is-set-up-for-you-learn-powerful-usecases-with-dynatrace","title":"2. While the Codespace is set-up for you, learn powerful usecases with Dynatrace","text":"<p>We know your time is very valuable. This codespace takes around 6 minutes to be fully operational. A local Kubernetes (kind) cluster monitored by Dynatrace will be configured and in it a sample application, the TODO app will be deployed. To make your experience best, we are also installing and configuring tools like:</p> <p>k9s kubectl helm node jq python3 gh</p> <p></p>"},{"location":"3-codespaces/#3-explore-what-has-been-deployed","title":"3. Explore what has been deployed","text":"<p>Your Codespace has now deployed the following resources:</p> <ul> <li> <p>A local Kubernetes (kind) cluster monitored by Dynatrace, with some pre-deployed apps   that will be used later in the demo.</p> </li> <li> <p>After a couple of minutes, you'll see this screen in your codespaces terminal. It contains the links to the local expose labguide and the UI of the application which we will be doing our Hands-On training. </p> </li> </ul>"},{"location":"3-codespaces/#4-tips-tricks","title":"4. Tips &amp; Tricks","text":"<p>We want to boost your learning and try to make your DEV experience as smooth as possible with Dynatrace trainings. Your Codespaces have a couple of convenience features added. </p>"},{"location":"3-codespaces/#show-the-greeting","title":"Show the greeting","text":"<p>In the terminal, there are functions loaded for your convenience. By creating a new Terminal the Greeting will be shown that includes the links to the exposed apps, the Github  pages, the Github Repository, the Dynatrace Tenant that is bound to this devcontainer and some of the tools installed.</p> <p>You can create a new Terminal directly in VSCode, type <code>zsh</code> or call the function <code>printGreeting</code> and that will print the greeting with the most relevant information.</p>"},{"location":"3-codespaces/#navigating-in-your-local-kubernetes","title":"Navigating in your local Kubernetes","text":"<p>The client <code>kubectl</code> and <code>k9s</code>are configured so you can navigate in your local Kubernetes like butter.  </p>"},{"location":"3-codespaces/#exposing-the-apps-to-the-public","title":"Exposing the apps to the public","text":"<p>The apps MKdocs and TODO app are being exposed in the devcontainer to your localhost. If you want to make the endpoints public accesible, just go to the ports section in VsCode, right click on them and change the visibility to public.</p>"},{"location":"3-codespaces/#5-troubleshooting","title":"5. Troubleshooting","text":""},{"location":"3-codespaces/#exposing-the-app","title":"Exposing the App","text":"<p>The todoApp is already exposed via NodePort in the port 30100, if you want to expose it in another port like the one defined 8080 in the service, then type and to expose the TODO app, type <code>exposeTodoApp</code>, </p> <pre><code>exposeTodoApp(){\n  printInfo \"Exposing Todo App in your dev.container\"\n  nohup kubectl port-forward service/todoapp 8080:8080  -n todoapp --address=\"0.0.0.0\" &gt; /tmp/kubectl-port-forward.log 2&gt;&amp;1 &amp;\n}\n</code></pre>"},{"location":"3-codespaces/#showing-open-ports-in-the-container","title":"Showing open ports in the container","text":"<p>There is a helper function loaded in the shell to see the open ports in the dev.container.</p> <pre><code>showOpenPorts(){\n  sudo netstat -tulnp\n}\n</code></pre> <ul> <li>Let's start our enablement</li> </ul>"},{"location":"4-content/","title":"Content","text":""},{"location":"4-content/#enablement-content","title":"Enablement content","text":"<p>In here you put your enablement content after Codespaces has been started and everything is ready and set-up.</p>"},{"location":"4-content/#how-mkdocs-work","title":"How MKdocs work","text":"<p>All the MD files are under the docs folder. In the main README.md file you want to give an intro on what the tutorial is about, being very short and to the point. If you add images there you reference them to doc/img folder.</p>"},{"location":"4-content/#mkdocs-reference","title":"MKDocs reference","text":"<p>Visit this page for the reference on using MKDocs markdown:</p> <p>https://squidfunk.github.io/mkdocs-material/reference/</p>"},{"location":"4-content/#snippets","title":"Snippets","text":"<p>Snippets allow you to reuse text, banners, code or pieces of code.</p> <p>This is a snippet with an admonition:</p> <pre><code>!!! tip \"View the Code\"\n    The code for this repository is hosted on GitHub. Click the \"View Code on GitHub\" link above.\n</code></pre> <p>View the Code</p> <p>The code for this repository is hosted on GitHub. Click the \"View Code on GitHub\" link above.</p>"},{"location":"4-content/#admonitions","title":"Admonitions","text":"<p>This is a warning admonition <pre><code>!!! warning \"Warning\"\n    This is a Warning \n</code></pre> looks like:</p> <p>Warning</p> <p>This is a Warning </p> <p>This are the available admonitions added with a snippet:</p> <p>Note</p> <p>This is a Note </p> <p>Abstract</p> <p>This is an abstract</p> <p>Tipp</p> <p>This is a tipp </p> <p>Success</p> <p>This is a success </p> <p>Question</p> <p>This is a success </p> <p>Failure</p> <p>This is a failure </p> <p>Danger</p> <p>This is a danger </p> <p>Info</p> <p>This is a info</p> <p>Warning</p> <p>This is a Warning </p> <p>This is an Example admonition</p> <p>This is an example</p> This is a bug and is collapsable <p>This is a bug</p>"},{"location":"4-content/#the-relation-between-the-mkdocsyaml-file-the-md-files-and-the-javascript-files-bizevents-in-the-snippets-folder","title":"The relation between the mkdocs.yaml file, the md files and the javascript files (BizEvents) in the snippets folder.","text":"<p>In the MKDocs you define the menu. The firs page needs to be called index.md, You can call it whatever you want. The name from the mkdocs.yaml file will be set as title as long as you add in the same .md file a js file.</p> <p>Example the <code>index.md</code> file has at the top a snippet <code>--8&lt;-- \"snippets/index.js\"</code></p> <p>This is because we want to monitor the Github pages and since we are using agentless rum, we need to add this to each page. in the JS file we add the same name we defined in the Menu Navigation in the mkdocs.yaml file for having consistency. This way we can understand the engagement of each page, the time the users spent in each page so we can improve our trainings.</p> <p>As a best practice I recommend for each MD file have a JS file with the same name, and this should be reflected in the mkdocs.yaml file. </p> <p>Meaning before going live, after you have created all your MD files, make sure th: - each page.md file has a snippet/page.js file associated with it - the page.js file inside reflects the same name as in the mkdocs.yaml file, so RUM reflects the page the user is reading.</p>"},{"location":"4-content/#headings-in-mkdocs","title":"Headings in MKDocs","text":"<p>if you start the md file with a snippet, automatically it'll take the name defined in the mkdocs file. You can override it by adding a Heading1 # which is only one #. For example this page is overriding the heading. As you can see there is no number 4 in the Content. All H2, H3 and so forth will be shown on the right pane for enhanced navigation and better user experience.</p>"},{"location":"4-content/#writing-live-the-mkdocs","title":"Writing live the MKDocs","text":"<p>This codespace has in the <code>postCreate.sh</code> the function <code>installMkdocs</code> which installs <code>runme</code> and the <code>mkdocs</code>. This will publish automatically the mkdocs so you can see in an instant the changes. </p> <p>In the <code>postStart.sh</code> file the MKDocs will be exposed with the function <code>exposeMkdocs</code>. This function exposes the mkdocs in the port 8000. Before going live you should comment out both funtions for two reasons, 1.- you'll improve the rampup time of all the containers created for your session and 2.- you dont want your users to go to the local copy of the labguide but to the one in the internet so we can monitor all user interactions with your lab guide. </p> <p>To watch the local mkdocs just go to the terminal and see the process exposed in port 8000.</p> <p>When you call it it should look something like this:</p> <pre><code>@sergiohinojosa \u279c /workspaces/enablement-codespaces-template (main) $ deployGhdocs \nINFO    -  Cleaning site directory\nINFO    -  Building documentation to directory: /workspaces/enablement-codespaces-template/site\nINFO    -  The following pages exist in the docs directory, but are not included in the \"nav\" configuration:\n             - snippets/admonitions.md\n             - snippets/disclaimer.md\n             - snippets/grail-requirements.md\n             - snippets/view-code.md\nINFO    -  Documentation built in 0.31 seconds\nINFO    -  Copying '/workspaces/enablement-codespaces-template/site' to 'gh-pages' branch and pushing to GitHub.\nEnumerating objects: 61, done.\nCounting objects: 100% (61/61), done.\nDelta compression using up to 2 threads\nCompressing objects: 100% (21/21), done.\nWriting objects: 100% (33/33), 1.31 MiB | 6.24 MiB/s, done.\nTotal 33 (delta 15), reused 1 (delta 0), pack-reused 0 (from 0)\nremote: Resolving deltas: 100% (15/15), completed with 12 local objects.\nTo https://github.com/dynatrace-wwse/enablement-codespaces-template\n   bca482c..db42f7f  gh-pages -&gt; gh-pages\nINFO    -  Your documentation should shortly be available at: https://dynatrace-wwse.github.io/enablement-codespaces-template/\n</code></pre> <p>Make sure that there is no warning in there, if there is a warning is because most likely you are referencing a page or an image that is missing or wrong.</p>"},{"location":"4-content/#deploying-the-github-pages","title":"Deploying the Github pages.","text":"<p>For this you'll need write access to the repo where the enablement is being hosted. There is a function loaded in the shell called <code>deployGhdocs</code>. Before calling it, be sure that you have commited your changes to origin/main. </p>"},{"location":"4-content/#adding-apps-and-instantiating-apps-in-cs","title":"Adding apps and instantiating apps in CS","text":"<p>The architecture is done in a way that will help us troubleshoot issues faster and has a good separation of concerns. All the logic is found in the <code>functions.sh</code> file. So the best is to add the deployment of the app in there and then reference it in the <code>postCreate.sh</code> or <code>postStart.sh</code> file. </p> <p>Now, the terminal loads this functions as well, this gives you the possibility to have interactive trainings. Let's say that you want to add an error, or block a firewall, anything, well you can add it in a function that the user can call <code>startTraining</code> or whatever we want to do. </p>"},{"location":"4-content/#the-greeting","title":"The greeting","text":"<p>The cool Dynatrace message is nothing else but echos in a function which are loaded in the user shell, in this case we are using an image with <code>zsh</code>. If you want to modify the greeting, this file is under ```.devcontainer/greeting.sh````</p> <p>Just by typing <code>zsh</code> a new terminal is created and you'll see your changes. Be aware that we want to keep consistency in all trainings, so don't change the template too much.</p>"},{"location":"4-content/#before-going-live","title":"Before Going Live","text":"<p>Make sure to install the plugin Todo Tree. This is a great plugin for tracking TODOs in repositories. I've added a couple of TODOs that you'll need to take care before going live. </p>"},{"location":"4-content/#enhancing-the-cs-template","title":"Enhancing the CS template","text":"<p>Multiple ways to collaborate: - You can create a Fork and add a PR.  - Add an issue directly in the Github repository. I have tons of enhancements in my head, but you can help me prioritize them so your work is more effective. Let's work together.</p> <ul> <li>Let's continue</li> </ul>"},{"location":"cleanup/","title":"5. Cleanup","text":"<p>Deleting the codespace from inside the container</p> <p>We like to make your life easier, for convenience there is a function loaded in the shell of the Codespace for deleting the codespace, just type <code>deleteCodespace</code>. This will trigger the deletion of the codespace.</p> <p>Another way to do this is by going to https://github.com/codespaces and delete the codespace.</p> <p>You may also want to deactivate or delete the API token needed for this lab.</p> <ul> <li>Ressources</li> </ul>"},{"location":"resources/","title":"6. Resources","text":""},{"location":"resources/#get-your-dynatrace-environment","title":"Get your Dynatrace environment","text":"<ul> <li>Create a Free Trial in Dynatrace</li> </ul>"},{"location":"resources/#documentation","title":"Documentation","text":"<ul> <li>Dynatrace documentation</li> </ul>"},{"location":"resources/#dynatrace-news","title":"Dynatrace news","text":"<ul> <li>Dynatrace Blog</li> </ul> <ul> <li>What's Next? </li> </ul>"},{"location":"whats-next/","title":"7. What's next?","text":"<p>More to come</p> <ul> <li>Stay tuned, more enablements are coming whith more advanced usecases...</li> </ul>"},{"location":"snippets/admonitions/","title":"Admonitions","text":"<p>Note</p> <p>This is a Note </p> <p>Abstract</p> <p>This is an abstract</p> <p>Tipp</p> <p>This is a tipp </p> <p>Success</p> <p>This is a success </p> <p>Question</p> <p>This is a success </p> <p>Failure</p> <p>This is a failure </p> <p>Danger</p> <p>This is a danger </p> <p>Info</p> <p>This is a info</p> <p>Warning</p> <p>This is a Warning </p> <p>This is an Example admonition</p> <p>This is an example</p> This is a bug and is collapsable <p>This is a bug</p>"},{"location":"snippets/disclaimer/","title":"Disclaimer","text":"<p>Support Policy</p> <p>This is an enablement project created by the Center of Excellence - Enablement Team at Dynatrace.</p> <p>Support is provided via GitHub issues only. The materials provided in this repository are offered \"as-is\" without any warranties, express or implied. Use them at your own risk.</p>"},{"location":"snippets/grail-requirements/","title":"Grail requirements","text":"<p>Requirements</p> <ul> <li>A Grail enabled Dynatrace SaaS Tenant (sign up here).</li> <li>A GitHub account to interact with the demo repository.</li> </ul>"},{"location":"snippets/view-code/","title":"View code","text":"<p>View the Code</p> <p>The code for this repository is hosted on GitHub. Click the \"View Code on GitHub\" link above.</p>"}]}